// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id String @id @default(uuid())
  products Product[] @relation("CategoryToProduct")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Product {
  id String @id @default(uuid())
  categoryId String
  category Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name String
  price Decimal
  images Image[]
  isArchived Boolean @default(false)
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAte DateTime @updatedAt

  @@index([categoryId])
}

model Image {
  id String @id @default(uuid())
  productId String
  product Product @relation(fields: [productId], references: [id])
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model Order {
  id String @id @default(uuid())
  orderNumber Int
  orderItems OrderItem[]
  isPaid Boolean @default(false)
  status String
  total Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model OrderItem {
  id String @id @default(uuid())
  orderId String
  order Order @relation(fields: [orderId], references: [id])
  productId String
  product Product @relation(fields: [productId], references: [id])
  quantity Int

@@index([orderId])
@@index([productId])
}
